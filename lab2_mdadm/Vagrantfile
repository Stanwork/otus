# -*- mode: ruby -*-
# vim: set ft=ruby :
home = ENV['HOME']
ENV["LC_ALL"] = "en_US.UTF-8"

MACHINES = {
  # Set hostname:
  :"centos-raid" => {
              :box_name => "centos/stream8",
              :box_version => "20210210.0",
              :cpus => 2,
              :memory => 1048,
              :disks =>  {
                :sata1 => {
                    :dfile => './.vagrant/sata1.vdi',
                    :size => 250,
                    :port => 1
                },
                :sata2 => {
                    :dfile => './.vagrant/sata2.vdi',
                    :size => 250,
                    :port => 2
                },
                :sata3 => {
                    :dfile => './.vagrant/sata3.vdi',
                    :size => 250,
                    :port => 3
                },
                :sata4 => {
                    :dfile => './.vagrant/sata4.vdi',
                    :size => 250,
                    :port => 4
                },
              }
            }
}

Vagrant.configure("2") do |config|
  MACHINES.each do |boxname, boxconfig|
    config.vm.synced_folder ".", "/vagrant", disabled: true
    if Vagrant.has_plugin?("vagrant-vbguest") then
      config.vbguest.auto_update = false
    end
    # Apply config for box{n}
    config.vm.define boxname do |box1|
      box1.vm.box = boxconfig[:box_name]
      box1.vm.box_version = boxconfig[:box_version]
      box1.vm.host_name = boxname.to_s
      box1.vm.provider "virtualbox" do |v|
        v.memory = boxconfig[:memory]
        v.cpus = boxconfig[:cpus]
        v.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
        v.customize ["modifyvm", :id, "--audio", "none"]
        boxconfig[:disks].each do |dname, dconf|
            unless File.exist?(dconf[:dfile])
                v.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
            end
            v.customize ['storageattach', :id, '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
            end
        end
      box1.vm.provision "shell", path: "provision.sh"
    end
  end
end